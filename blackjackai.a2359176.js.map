{"mappings":"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","sources":["<anon>","src/script.js"],"sourcesContent":["// Website and Animation\nvar player_cards = null;\nvar dealer_card = null;\nconst cardValues = [\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    '10',\n    'J',\n    'Q',\n    'K',\n    'A'\n];\nconst cardNames = [\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    1\n];\nvar selectedCards = [\n    null,\n    null,\n    null,\n    null,\n    null,\n    null\n];\ndocument.querySelectorAll('[data-index]').forEach((container)=>{\n    const idx = parseInt(container.getAttribute('data-index'));\n    cardValues.forEach((val, i)=>{\n        const btn = document.createElement('button');\n        btn.textContent = val;\n        btn.className = \"card-btn inline-flex items-center justify-center px-3 py-2 border border-gray-300 rounded-lg text-sm text-gray-800 bg-white hover:bg-blue-100\";\n        btn.id = cardNames[i];\n        btn.addEventListener('click', ()=>{\n            container.querySelectorAll('button').forEach((b)=>b.classList.remove(\"bg-blue-600\", \"text-white\"));\n            btn.classList.add(\"bg-blue-600\", \"text-white\");\n            selectedCards[idx] = cardNames[i];\n            update();\n        });\n        container.appendChild(btn);\n    });\n});\nfunction update() {\n    if (selectedCards[0] != null && selectedCards[1] != null && selectedCards[5] != null) {\n        player_cards = [];\n        for(let i in selectedCards)if (selectedCards[i] != null && i != selectedCards.length - 1) player_cards.push(selectedCards[i]);\n        dealer_card = selectedCards[5];\n    }\n}\ndocument.getElementById('reset').addEventListener('click', ()=>{\n    player_cards = null;\n    dealer_card = null;\n    selectedCards = [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n    ];\n    info_label.innerHTML = 'Selectionne les cartes';\n    document.querySelectorAll('[data-index]').forEach((container)=>{\n        container.querySelectorAll('button').forEach((b)=>b.classList.remove(\"bg-blue-600\", \"text-white\"));\n    });\n});\nconst N = 1000;\nconst info_label = document.getElementById('info');\nfunction loop(t) {\n    if (player_cards != null) {\n        var win = 0;\n        var egality = 0;\n        var loose = 0;\n        try {\n            for(let i = 0; i < N; i++){\n                const game = new Game(1, player_cards.slice(), [\n                    dealer_card\n                ]);\n                const bet = game.play();\n                if (bet > 0) win += 1;\n                else if (bet < 0) loose += 1;\n                else if (bet == 0) egality += 1;\n            }\n            const game = new Game(1, player_cards.slice(), [\n                dealer_card\n            ]);\n            const action = game.getActionFromTable(game.player, game.player_value);\n            win = win / N;\n            egality = egality / N;\n            loose = loose / N;\n            info_label.innerHTML = 'Win prob : ' + (Math.round(win * 100) / 100).toString() + '<br>Loose prob : ' + (Math.round(loose * 100) / 100).toString() + '<br>Egality prob : ' + (Math.round(egality * 100) / 100).toString() + '<br>Action : ' + actions[action];\n        } catch (error) {\n            console.log(error);\n            info_label.innerHTML = \"D\\xe9passement, veuillez reset\";\n        }\n    }\n    requestAnimationFrame(loop);\n}\nloop();\n\n//# sourceMappingURL=blackjackai.a2359176.js.map\n","// Website and Animation\nvar player_cards = null\nvar dealer_card = null\n\nconst cardValues = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];\nconst cardNames = [2, 3, 4, 5, 6, 7, 8,9, 10, 11, 12, 13, 1];\nvar selectedCards = [null, null, null, null, null, null];\n\ndocument.querySelectorAll('[data-index]').forEach(container => {\n  const idx = parseInt(container.getAttribute('data-index'));\n  cardValues.forEach((val,i) => {\n    const btn = document.createElement('button');\n    btn.textContent = val;\n    btn.className = \"card-btn inline-flex items-center justify-center px-3 py-2 border border-gray-300 rounded-lg text-sm text-gray-800 bg-white hover:bg-blue-100\";\n    btn.id = cardNames[i]\n    btn.addEventListener('click', () => {\n      container.querySelectorAll('button').forEach(b => b.classList.remove(\"bg-blue-600\", \"text-white\"));\n      btn.classList.add(\"bg-blue-600\", \"text-white\");\n      selectedCards[idx] = cardNames[i]\n      update();\n    });\n    container.appendChild(btn);\n  });\n});\n\nfunction update() {\n    if(selectedCards[0] != null && selectedCards[1] != null && selectedCards[5] != null) {\n        player_cards = []\n        for (let i in selectedCards) {\n            if(selectedCards[i]!=null && i != selectedCards.length -1){\n                player_cards.push(selectedCards[i])\n            }\n        }\n        dealer_card = selectedCards[5]\n    }\n}\n\ndocument.getElementById('reset').addEventListener('click', ()=> {\n  player_cards=null;\n  dealer_card=null\n  selectedCards = [null, null, null, null, null, null]\n  info_label.innerHTML = 'Selectionne les cartes'\n  document.querySelectorAll('[data-index]').forEach((container) => {\n    container.querySelectorAll('button').forEach(b => b.classList.remove(\"bg-blue-600\", \"text-white\"));\n  })\n})\n\n\nconst N=1000\nconst info_label = document.getElementById('info')\n\nfunction loop(t) {\n  if(player_cards != null) {\n    var win = 0\n    var egality = 0\n    var loose = 0\n\n      try {\n          for (let i = 0; i<N; i++) {\n              const game = new Game(1, player_cards.slice(), [dealer_card])\n              const bet = game.play()\n              if(bet > 0) {win+=1}\n              else if(bet < 0) {loose+=1}\n              else if(bet == 0) {egality+=1}\n          }\n\n          const game = new Game(1, player_cards.slice(), [dealer_card])\n          const action = game.getActionFromTable(game.player, game.player_value)\n\n          win = win/N\n          egality = egality/N\n          loose = loose/N\n          info_label.innerHTML = 'Win prob : ' + (Math.round(win*100)/100).toString() \n          + '<br>Loose prob : ' + (Math.round(loose*100)/100).toString() \n          + '<br>Egality prob : ' + (Math.round(egality*100)/100).toString()\n          + '<br>Action : ' + actions[action]\n      } catch (error) {\n        console.log(error)\n        info_label.innerHTML = \"DÃ©passement, veuillez reset\" \n      }\n  }\n\n  requestAnimationFrame(loop)\n}\n\nloop()"],"names":["player_cards","dealer_card","cardValues","cardNames","selectedCards","update","i","length","push","document","querySelectorAll","forEach","container","idx","parseInt","getAttribute","val","btn","createElement","textContent","className","id","addEventListener","b","classList","remove","add","appendChild","getElementById","info_label","innerHTML","N","loop","t","win","egality","loose","bet","game","Game","slice","play","action","getActionFromTable","player","player_value","Math","round","toString","actions","error","console","log","requestAnimationFrame"],"version":3,"file":"blackjackai.a2359176.js.map"}