{"mappings":"ACAA,IAAM,MAAQ,CACV,UAAa,CACX,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,CACF,EACA,GAAM,CACJ,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,GAAM,CACJ,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAAG,EAAK,EAC7D,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,GAAM,EAAG,EAAK,CAC3C,EACA,EAAK,CACH,EAAK,EAAG,EAAK,EA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","sources":["<anon>","src/game.js"],"sourcesContent":["const table = {\n    \"different\": {\n        \"17\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"18\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"19\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"20\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"21\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"13\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"14\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"15\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"16\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"12\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"11\": {\n            \"2\": 2,\n            \"3\": 2,\n            \"4\": 2,\n            \"5\": 2,\n            \"6\": 2,\n            \"7\": 2,\n            \"8\": 2,\n            \"9\": 2,\n            \"10\": 2,\n            \"11\": 2,\n            \"12\": 2,\n            \"13\": 2,\n            \"1\": 1\n        },\n        \"10\": {\n            \"2\": 2,\n            \"3\": 2,\n            \"4\": 2,\n            \"5\": 2,\n            \"6\": 2,\n            \"7\": 2,\n            \"8\": 2,\n            \"9\": 2,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"9\": {\n            \"2\": 1,\n            \"3\": 2,\n            \"4\": 2,\n            \"5\": 2,\n            \"6\": 1,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"5\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 1,\n            \"5\": 1,\n            \"6\": 1,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"6\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 1,\n            \"5\": 1,\n            \"6\": 1,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"7\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 1,\n            \"5\": 1,\n            \"6\": 1,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"8\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 1,\n            \"5\": 1,\n            \"6\": 1,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        }\n    },\n    \"as\": {\n        \"8\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"9\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"10\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"7\": {\n            \"2\": 0,\n            \"3\": 2,\n            \"4\": 2,\n            \"5\": 2,\n            \"6\": 2,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"6\": {\n            \"2\": 1,\n            \"3\": 2,\n            \"4\": 2,\n            \"5\": 2,\n            \"6\": 2,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"4\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 2,\n            \"5\": 2,\n            \"6\": 2,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"5\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 2,\n            \"5\": 2,\n            \"6\": 2,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"2\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 1,\n            \"5\": 2,\n            \"6\": 2,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"3\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 1,\n            \"5\": 2,\n            \"6\": 2,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        }\n    },\n    \"pair\": {\n        \"1\": {\n            \"2\": 3,\n            \"3\": 3,\n            \"4\": 3,\n            \"5\": 3,\n            \"6\": 3,\n            \"7\": 3,\n            \"8\": 3,\n            \"9\": 3,\n            \"10\": 3,\n            \"11\": 3,\n            \"12\": 3,\n            \"13\": 3,\n            \"1\": 3\n        },\n        \"10\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"11\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"12\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"13\": {\n            \"2\": 0,\n            \"3\": 0,\n            \"4\": 0,\n            \"5\": 0,\n            \"6\": 0,\n            \"7\": 0,\n            \"8\": 0,\n            \"9\": 0,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"9\": {\n            \"2\": 3,\n            \"3\": 3,\n            \"4\": 3,\n            \"5\": 3,\n            \"6\": 3,\n            \"7\": 0,\n            \"8\": 3,\n            \"9\": 3,\n            \"10\": 0,\n            \"11\": 0,\n            \"12\": 0,\n            \"13\": 0,\n            \"1\": 0\n        },\n        \"8\": {\n            \"2\": 3,\n            \"3\": 3,\n            \"4\": 3,\n            \"5\": 3,\n            \"6\": 3,\n            \"7\": 3,\n            \"8\": 3,\n            \"9\": 3,\n            \"10\": 3,\n            \"11\": 3,\n            \"12\": 3,\n            \"13\": 3,\n            \"1\": 3\n        },\n        \"7\": {\n            \"2\": 3,\n            \"3\": 3,\n            \"4\": 3,\n            \"5\": 3,\n            \"6\": 3,\n            \"7\": 3,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"6\": {\n            \"2\": 3,\n            \"3\": 3,\n            \"4\": 3,\n            \"5\": 3,\n            \"6\": 3,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"5\": {\n            \"2\": 2,\n            \"3\": 2,\n            \"4\": 2,\n            \"5\": 2,\n            \"6\": 2,\n            \"7\": 2,\n            \"8\": 2,\n            \"9\": 2,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"4\": {\n            \"2\": 1,\n            \"3\": 1,\n            \"4\": 1,\n            \"5\": 3,\n            \"6\": 3,\n            \"7\": 1,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"3\": {\n            \"2\": 3,\n            \"3\": 3,\n            \"4\": 3,\n            \"5\": 3,\n            \"6\": 3,\n            \"7\": 3,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        },\n        \"2\": {\n            \"2\": 3,\n            \"3\": 3,\n            \"4\": 3,\n            \"5\": 3,\n            \"6\": 3,\n            \"7\": 3,\n            \"8\": 1,\n            \"9\": 1,\n            \"10\": 1,\n            \"11\": 1,\n            \"12\": 1,\n            \"13\": 1,\n            \"1\": 1\n        }\n    }\n};\nconst cards = {\n    1: {\n        name: 'as',\n        value: [\n            1,\n            11\n        ]\n    },\n    2: {\n        name: '2',\n        value: [\n            2\n        ]\n    },\n    3: {\n        name: '2',\n        value: [\n            3\n        ]\n    },\n    4: {\n        name: '2',\n        value: [\n            4\n        ]\n    },\n    5: {\n        name: '2',\n        value: [\n            5\n        ]\n    },\n    6: {\n        name: '2',\n        value: [\n            6\n        ]\n    },\n    7: {\n        name: '2',\n        value: [\n            7\n        ]\n    },\n    8: {\n        name: '2',\n        value: [\n            8\n        ]\n    },\n    9: {\n        name: '2',\n        value: [\n            9\n        ]\n    },\n    10: {\n        name: '2',\n        value: [\n            10\n        ]\n    },\n    11: {\n        name: '2',\n        value: [\n            10\n        ]\n    },\n    12: {\n        name: '2',\n        value: [\n            10\n        ]\n    },\n    13: {\n        name: '2',\n        value: [\n            10\n        ]\n    }\n};\nconst actions = {\n    0: 'Stop',\n    1: 'Take',\n    2: 'Double',\n    3: 'Sepair'\n};\nclass Game {\n    constructor(bet = null, player = null, dealer = null){\n        this.player = player != null ? player : this.getRandomCards(2);\n        this.dealer = dealer != null ? dealer : this.getRandomCards(1);\n        this.player_deck2 = null;\n        this.dealer_value = this.getCount([\n            this.dealer[0]\n        ]);\n        this.player_value = this.getCount(this.player);\n        this.bet = bet;\n        this.bet2 = bet.valueOf();\n    }\n    getActionFromTable(deck, deck_value) {\n        if (deck.length == 2) {\n            if (deck[0] == deck[1]) return table['pair'][deck[0].toString()][this.dealer_value.toString()];\n            else if ((deck[0] == 1 || deck[1] == 1) && deck[0] != deck[1]) {\n                const other_card = deck[0] == 1 ? 1 : 0;\n                return table['as'][cards[deck[other_card]].value[0].toString()][this.dealer_value.toString()];\n            } else return table['different'][deck_value.toString()][this.dealer_value.toString()];\n        } else return table['different'][deck_value.toString()][this.dealer_value.toString()];\n    }\n    isBlackjack(deck) {\n        return this.getCount([\n            deck[0],\n            deck[1]\n        ]) == 21;\n    }\n    getCount(deck) {\n        var s = 0;\n        for (const el of deck)if (el != 1) s = s + cards[el].value[0];\n        for (const el of deck)if (el == 1) {\n            if (s + cards[el].value[1] <= 21) s = s + cards[el].value[1];\n            else s = s + cards[el].value[0];\n        }\n        return s;\n    }\n    getRandomCards(n) {\n        const deck = [];\n        for(let i = 0; i < n; i++)deck.push(this.randomIntFromInterval(1, 13));\n        return deck;\n    }\n    randomIntFromInterval(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n    take() {\n        const new_card = this.randomIntFromInterval(1, 13);\n        this.player.push(new_card);\n        this.player_value = this.getCount(this.player);\n    }\n    takeDeck2() {\n        const new_card = this.randomIntFromInterval(1, 13);\n        this.player_deck2.push(new_card);\n        this.player_deck2_value = this.getCount(this.player_deck2);\n    }\n    doDealer() {\n        this.dealer_value = this.getCount(this.dealer);\n        while(this.dealer_value < 17){\n            const new_card = this.randomIntFromInterval(1, 13);\n            this.dealer.push(new_card);\n            this.dealer_value = this.getCount(this.dealer);\n        }\n    }\n    winner(deck, deck_value, bet) {\n        const player_blackjack = this.isBlackjack(deck);\n        const dealer_blackjack = this.isBlackjack(this.dealer);\n        if (deck_value > 21) return -bet;\n        if (this.dealer_value > 21) return bet;\n        if (deck_value < this.dealer_value) return -bet;\n        if (!player_blackjack && dealer_blackjack) return -bet;\n        if (player_blackjack && dealer_blackjack) return 0;\n        if (deck_value == this.dealer_value) return 0;\n        if (player_blackjack && !dealer_blackjack) return bet * 1.5;\n        if (deck_value > this.dealer_value) return bet;\n    }\n    stop() {\n        this.doDealer();\n        this.bet = this.winner(this.player, this.player_value, this.bet);\n        if (this.player_deck2 != null) {\n            this.bet2 = this.winner(this.player_deck2, this.player_deck2_value, this.bet2);\n            this.bet2 = this.bet2 > 0 ? this.bet2 : 0;\n            return this.bet + this.bet2;\n        }\n        return this.bet;\n    }\n    play() {\n        var action = this.getActionFromTable(this.player, this.player_value);\n        while(this.player_value <= 21 && action != 0){\n            if (action == 1) this.take();\n            else if (action == 2) {\n                this.bet = this.bet * 2;\n                this.take();\n                break;\n            } else if (action == 0) break;\n            else if (action == 3 && this.player_deck2 == null) {\n                this.player = [\n                    this.player[0],\n                    this.randomIntFromInterval(1, 13)\n                ];\n                this.player_deck2 = [\n                    this.player[0],\n                    this.randomIntFromInterval(1, 13)\n                ];\n                this.player_deck2_value = this.getCount(this.player_deck2);\n                this.take();\n            }\n            if (this.player_value <= 21) action = this.getActionFromTable(this.player, this.player_value);\n            else break;\n        }\n        if (this.player_deck2 != null) {\n            var action = this.getActionFromTable(this.player_deck2, this.player_deck2_value);\n            while(this.player_deck2_value <= 21 && action != 0){\n                if (action == 1) this.takeDeck2();\n                else if (action == 2) {\n                    this.bet2 = this.bet2 * 2;\n                    this.takeDeck2();\n                    break;\n                } else if (action == 0) break;\n                else if (action == 3) this.takeDeck2();\n                if (this.player_deck2_value <= 21) action = this.getActionFromTable(this.player_deck2, this.player_deck2_value);\n                else break;\n            }\n        }\n        return this.stop();\n    }\n}\n\n//# sourceMappingURL=blackjackai.dbd86ad8.js.map\n","const table = {\n    \"different\": {\n      \"17\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"18\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"19\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"20\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"21\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"13\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"14\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"15\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"16\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"12\": {\n        \"2\": 1, \"3\": 1, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"11\": {\n        \"2\": 2, \"3\": 2, \"4\": 2, \"5\": 2, \"6\": 2, \"7\": 2, \"8\": 2, \"9\": 2,\n        \"10\": 2, \"11\": 2, \"12\": 2, \"13\": 2, \"1\": 1\n      },\n      \"10\": {\n        \"2\": 2, \"3\": 2, \"4\": 2, \"5\": 2, \"6\": 2, \"7\": 2, \"8\": 2, \"9\": 2,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"9\": {\n        \"2\": 1, \"3\": 2, \"4\": 2, \"5\": 2, \"6\": 1, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"5\": {\n        \"2\": 1, \"3\": 1, \"4\": 1, \"5\": 1, \"6\": 1, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"6\": {\n        \"2\": 1, \"3\": 1, \"4\": 1, \"5\": 1, \"6\": 1, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"7\": {\n        \"2\": 1, \"3\": 1, \"4\": 1, \"5\": 1, \"6\": 1, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"8\": {\n        \"2\": 1, \"3\": 1, \"4\": 1, \"5\": 1, \"6\": 1, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      }\n    },\n    \"as\": {\n      \"8\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"9\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"10\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"7\": {\n        \"2\": 0, \"3\": 2, \"4\": 2, \"5\": 2, \"6\": 2, \"7\": 0, \"8\": 0, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"6\": {\n        \"2\": 1, \"3\": 2, \"4\": 2, \"5\": 2, \"6\": 2, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"4\": {\n        \"2\": 1, \"3\": 1, \"4\": 2, \"5\": 2, \"6\": 2, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"5\": {\n        \"2\": 1, \"3\": 1, \"4\": 2, \"5\": 2, \"6\": 2, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"2\": {\n        \"2\": 1, \"3\": 1, \"4\": 1, \"5\": 2, \"6\": 2, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"3\": {\n        \"2\": 1, \"3\": 1, \"4\": 1, \"5\": 2, \"6\": 2, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      }\n    },\n    \"pair\": {\n      \"1\": {\n        \"2\": 3, \"3\": 3, \"4\": 3, \"5\": 3, \"6\": 3, \"7\": 3, \"8\": 3, \"9\": 3,\n        \"10\": 3, \"11\": 3, \"12\": 3, \"13\": 3, \"1\": 3\n      },\n      \"10\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"11\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"12\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"13\": {\n        \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"9\": {\n        \"2\": 3, \"3\": 3, \"4\": 3, \"5\": 3, \"6\": 3, \"7\": 0, \"8\": 3, \"9\": 3,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"1\": 0\n      },\n      \"8\": {\n        \"2\": 3, \"3\": 3, \"4\": 3, \"5\": 3, \"6\": 3, \"7\": 3, \"8\": 3, \"9\": 3,\n        \"10\": 3, \"11\": 3, \"12\": 3, \"13\": 3, \"1\": 3\n      },\n      \"7\": {\n        \"2\": 3, \"3\": 3, \"4\": 3, \"5\": 3, \"6\": 3, \"7\": 3, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"6\": {\n        \"2\": 3, \"3\": 3, \"4\": 3, \"5\": 3, \"6\": 3, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"5\": {\n        \"2\": 2, \"3\": 2, \"4\": 2, \"5\": 2, \"6\": 2, \"7\": 2, \"8\": 2, \"9\": 2,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"4\": {\n        \"2\": 1, \"3\": 1, \"4\": 1, \"5\": 3, \"6\": 3, \"7\": 1, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"3\": {\n        \"2\": 3, \"3\": 3, \"4\": 3, \"5\": 3, \"6\": 3, \"7\": 3, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      },\n      \"2\": {\n        \"2\": 3, \"3\": 3, \"4\": 3, \"5\": 3, \"6\": 3, \"7\": 3, \"8\": 1, \"9\": 1,\n        \"10\": 1, \"11\": 1, \"12\": 1, \"13\": 1, \"1\": 1\n      }\n    }\n  }\n    \n\nconst cards = {\n    1: {name: 'as', value: [1,11]},\n    2: {name: '2', value: [2]}, \n    3: {name: '2', value: [3]},\n    4: {name: '2', value: [4]},\n    5: {name: '2', value: [5]},\n    6: {name: '2', value: [6]},\n    7: {name: '2', value: [7]},\n    8: {name: '2', value: [8]},\n    9: {name: '2', value: [9]},\n    10: {name: '2', value: [10]},\n    11: {name: '2', value: [10]},\n    12: {name: '2', value: [10]},\n    13: {name: '2', value: [10]},\n}\n\nconst actions = {\n    0: 'Stop', 1: 'Take', 2: 'Double', 3: 'Sepair'\n}\n\nclass Game {\n    constructor(bet=null,player=null,dealer=null){\n        this.player = (player != null) ? player : this.getRandomCards(2)\n        this.dealer = (dealer != null) ? dealer : this.getRandomCards(1)\n        this.player_deck2 = null\n\n        this.dealer_value = this.getCount([this.dealer[0]])\n        this.player_value = this.getCount(this.player)\n\n        this.bet = bet\n        this.bet2 = bet.valueOf()\n    }\n\n    getActionFromTable(deck, deck_value) {\n        if(deck.length == 2) {\n            if(deck[0] == deck[1]) {\n                return table['pair'][deck[0].toString()][this.dealer_value.toString()]\n            } else if((deck[0] == 1 || deck[1] == 1) && deck[0] != deck[1]) {\n                const other_card = (deck[0] == 1) ? 1 : 0\n                return table['as'][cards[deck[other_card]].value[0].toString()][this.dealer_value.toString()]\n            } else {\n                return table['different'][deck_value.toString()][this.dealer_value.toString()]\n            }\n        } else {\n            return table['different'][deck_value.toString()][this.dealer_value.toString()]\n        }\n    }\n\n    isBlackjack(deck) {\n        return (this.getCount([deck[0], deck[1]]) == 21)\n    }\n\n    getCount(deck) {\n        var s=0\n        for (const el of deck) {\n            if(el != 1) {\n                s=s+cards[el].value[0]\n            }\n        }\n        for (const el of deck) {\n            if(el == 1) {\n                if(s + cards[el].value[1] <= 21) {\n                    s=s+cards[el].value[1]\n                } else {\n                    s=s+cards[el].value[0]\n                }\n            }\n        }\n        return s\n    }\n\n    getRandomCards(n) {\n        const deck = []\n        for (let i =0; i<n;i++){\n            deck.push(this.randomIntFromInterval(1,13))\n        }\n        return deck\n    }\n    \n    randomIntFromInterval(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    take() {\n        const new_card = this.randomIntFromInterval(1,13)\n        this.player.push(new_card)\n        this.player_value = this.getCount(this.player)\n    }\n\n    takeDeck2() {\n        const new_card = this.randomIntFromInterval(1,13)\n        this.player_deck2.push(new_card)\n        this.player_deck2_value = this.getCount(this.player_deck2)\n    }\n\n    doDealer() {\n        this.dealer_value = this.getCount(this.dealer)\n        while(this.dealer_value < 17) {\n            const new_card = this.randomIntFromInterval(1,13)\n            this.dealer.push(new_card)\n            this.dealer_value = this.getCount(this.dealer)\n        }\n    }\n\n    winner(deck, deck_value, bet) {\n        const player_blackjack = this.isBlackjack(deck)\n        const dealer_blackjack = this.isBlackjack(this.dealer)\n\n        if (deck_value > 21) {\n            return -bet\n        } \n        if(this.dealer_value > 21) {\n            return bet\n        }\n            \n        if(deck_value < this.dealer_value) {\n            return -bet\n        }\n        if(!player_blackjack && dealer_blackjack) {\n            return -bet\n        }\n\n        if(player_blackjack && dealer_blackjack) {\n            return 0\n        }\n        if(deck_value == this.dealer_value) {\n            return 0\n        }\n\n        if(player_blackjack && !dealer_blackjack) {\n            return bet * (3/2)\n        }\n        if(deck_value > this.dealer_value) {\n            return bet\n        }\n    }\n\n    stop() {\n        this.doDealer()\n        this.bet = this.winner(this.player, this.player_value, this.bet)\n        if(this.player_deck2 != null) {\n            this.bet2 = this.winner(this.player_deck2, this.player_deck2_value, this.bet2)\n            this.bet2 = (this.bet2 > 0) ? this.bet2 : 0\n            return this.bet + this.bet2\n        }\n        return this.bet\n    }\n\n    play() {\n        var action = this.getActionFromTable(this.player, this.player_value)\n        while(this.player_value <= 21 && action!=0) {\n            if(action == 1) {\n                this.take()\n            } else if (action == 2){\n                this.bet = this.bet * 2\n                this.take()\n                break\n            } else if(action == 0) {\n                break\n            } else if(action == 3 && this.player_deck2 == null) {\n                this.player = [this.player[0], this.randomIntFromInterval(1,13)]\n                this.player_deck2 = [this.player[0], this.randomIntFromInterval(1,13)]\n                this.player_deck2_value = this.getCount(this.player_deck2)\n\n                this.take()\n            }\n\n            if(this.player_value <= 21) {\n                action = this.getActionFromTable(this.player, this.player_value)\n            } else {\n                break\n            }\n        }\n\n        if(this.player_deck2 != null) {\n            var action = this.getActionFromTable(this.player_deck2, this.player_deck2_value)\n            while(this.player_deck2_value <= 21 && action!=0) {\n                if(action == 1) {\n                    this.takeDeck2()\n                } else if (action == 2){\n                    this.bet2 = this.bet2 * 2\n                    this.takeDeck2()\n                    break\n                } else if(action == 0) {\n                    break\n                } else if(action == 3) {\n                    this.takeDeck2()\n                }\n    \n                if(this.player_deck2_value <= 21) {\n                    action = this.getActionFromTable(this.player_deck2, this.player_deck2_value)\n                } else {\n                    break\n                }\n            }\n        }\n\n        return this.stop()\n    }\n}"],"names":["table","cards","name","value","actions","Game","bet","player","dealer","getRandomCards","player_deck2","dealer_value","getCount","player_value","bet2","valueOf","getActionFromTable","deck","deck_value","length","toString","other_card","isBlackjack","s","el","n","i","push","randomIntFromInterval","min","max","Math","floor","random","take","new_card","takeDeck2","player_deck2_value","doDealer","winner","player_blackjack","dealer_blackjack","stop","play","action"],"version":3,"file":"blackjackai.dbd86ad8.js.map"}